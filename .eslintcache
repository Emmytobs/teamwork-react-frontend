[{"C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\index.js":"1","C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\App.js":"2","C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\LogIn\\LogIn.js":"3","C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\SignUp\\SignUp.js":"4","C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\Header\\Header.js":"5","C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\Home\\Home.js":"6","C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\FormError\\FormError.js":"7","C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\ChatRoom\\ChatRoom.js":"8","C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\ChatRoom\\MenuBar\\MenuBar.js":"9","C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\ChatRoom\\ChatBox\\ChatBox.js":"10","C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\ChatRoom\\CommentBox\\CommentBox.js":"11","C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\context\\reducer.js":"12","C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\context\\actionNames.js":"13","C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\context\\dispatchers.js":"14","C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\ChatRoom\\ChatBox\\PostInput.js":"15","C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\ChatRoom\\ChatBox\\Post.js":"16","C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\ChatRoom\\ChatBox\\Comments.js":"17"},{"size":662,"mtime":1609695469429,"results":"18","hashOfConfig":"19"},{"size":564,"mtime":1609703133730,"results":"20","hashOfConfig":"19"},{"size":2252,"mtime":1610137153884,"results":"21","hashOfConfig":"19"},{"size":3423,"mtime":1610137375265,"results":"22","hashOfConfig":"19"},{"size":1357,"mtime":1609782543542,"results":"23","hashOfConfig":"19"},{"size":1358,"mtime":1609796348324,"results":"24","hashOfConfig":"19"},{"size":272,"mtime":1609674833410,"results":"25","hashOfConfig":"19"},{"size":690,"mtime":1609689465785,"results":"26","hashOfConfig":"19"},{"size":2833,"mtime":1610137458901,"results":"27","hashOfConfig":"19"},{"size":3978,"mtime":1610137553705,"results":"28","hashOfConfig":"19"},{"size":1105,"mtime":1609682830072,"results":"29","hashOfConfig":"19"},{"size":1489,"mtime":1610028311239,"results":"30","hashOfConfig":"19"},{"size":320,"mtime":1609935530050,"results":"31","hashOfConfig":"19"},{"size":1215,"mtime":1609943347425,"results":"32","hashOfConfig":"19"},{"size":1124,"mtime":1609949850704,"results":"33","hashOfConfig":"19"},{"size":1674,"mtime":1610098527816,"results":"34","hashOfConfig":"19"},{"size":1894,"mtime":1610098495285,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1o2vfa0",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},"C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\index.js",[],["77","78"],"C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\App.js",[],"C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\LogIn\\LogIn.js",["79","80"],"import React, { useState } from 'react'\r\n\r\nimport { Container, Box, Button, Input, VStack  } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './LogIn.css'\r\nimport { storeToken, storeUser } from '../../context/dispatchers';\r\nimport FormError from '../FormError/FormError';\r\n\r\n\r\nfunction LogIn(props) {\r\n    const [form, setForm] = useState({ email: '', password: '' });\r\n    const [error, setError] = useState('')\r\n    const updateForm = (e) => {\r\n        const { name, value } = e.target;\r\n        setForm({ ...form, [name]: value });\r\n    }\r\n    const submitForm = async (e) => {\r\n        // Send API post request to log user in\r\n        try {\r\n            const response = await axios.post(`${process.env.REACT_APP_API_URL}/login`, { ...form });\r\n            const { token, user: { firstname, lastname, email, department, isadmin, profilePic } } = response.data.data;\r\n        \r\n            if(!response) {\r\n                setError('Couldn\\'t make request. Please check your internet connection');\r\n            }\r\n            storeToken(token, props.dispatch);\r\n            storeUser({ firstname, lastname, email, department, isadmin, profilePic }, props.dispatch);\r\n\r\n            setError('');\r\n            props.history.push('/app');\r\n        } catch (error) {\r\n            if (error.message === 'Network Error') {\r\n                return setError('An error occured. Please try again later');\r\n            }\r\n            const { message } = error.response.data;\r\n            console.log(message)\r\n            setError(message);\r\n        }\r\n    }\r\n    return (\r\n        <VStack spacing=\"20px\" as=\"form\" color=\"gray.300\">\r\n            <Input name=\"email\" size=\"md\" type=\"text\" placeholder=\"Enter your email address\" onChange={updateForm} />\r\n            <Input name=\"password\" size=\"md\" type=\"password\" placeholder=\"Enter your password\" onChange={updateForm} />\r\n            {error && <FormError message={error} />}\r\n            <Button onClick={submitForm} color=\"#000\">Log in</Button>\r\n        </VStack>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        token: state.token,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(LogIn);\r\n","C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\SignUp\\SignUp.js",[],"C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\Header\\Header.js",[],"C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\Home\\Home.js",[],"C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\FormError\\FormError.js",[],["81","82"],"C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\ChatRoom\\ChatRoom.js",[],"C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\ChatRoom\\MenuBar\\MenuBar.js",["83","84"],"import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    Box, \r\n    Text, \r\n    List,\r\n    ListItem,\r\n} from '@chakra-ui/react';\r\n\r\nimport { storeDepartmentMembers } from '../../../context/dispatchers';\r\n\r\nimport axios from 'axios'\r\n\r\nimport './MenuBar.css';\r\n\r\nfunction MenuBar(props) {\r\n    useEffect(() => {\r\n        fetchDepartmentMembers()\r\n    }, []);\r\n\r\n    async function fetchDepartmentMembers() {\r\n        try {\r\n            const response = await axios.get(\r\n                `${process.env.REACT_APP_API_URL}/departments/members`,\r\n                {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + props.token,\r\n                    },\r\n                }\r\n            );\r\n            if (!response) {\r\n                // set global error state indicating no internet\r\n            }\r\n        \r\n            if (!response.data.data) {\r\n                // Set notification state that tells the user there are no members\r\n            }\r\n            storeDepartmentMembers(response.data.data.members, props.dispatch);\r\n        } catch (error) {\r\n            // set error state\r\n            console.log(error.response)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box className=\"menu-bar\">\r\n            <Box \r\n                color=\"#fff\" \r\n                borderTop=\"1px solid #c9c3c371\" \r\n                borderBottom=\"1px solid #c9c3c371\"\r\n                py=\"15px\" \r\n                px=\"30px\"\r\n                margin=\"0 auto\"\r\n                w=\"100%\"\r\n                z-index=\"20\" \r\n                bgColor=\"inherit\">\r\n                <Text textAlign=\"left\" w=\"100%\">\r\n                    Department #{props.user.department}\r\n                    {props.user.isadmin && <span>Change</span>}\r\n                </Text>\r\n            </Box>\r\n            <Box color=\"#fff\" marginTop=\"26px\" w=\"100%\">\r\n                <Text as=\"h1\" fontSize=\"2rem\" px=\"12px\">Members</Text>\r\n               \r\n                <List>\r\n                    {props.departmentMembers.map((member, index) => \r\n                        <ListItem \r\n                            key={index}\r\n                            cursor=\"pointer\" \r\n                            py=\"0\"\r\n                            px=\"0\"\r\n                            _hover={{ background: \"rgba(255, 255, 255, 0.3)\", fontWeight: \"500\" }} >\r\n                            <Text py=\"10px\" px=\"12px\" >{member.firstname} {member.lastname}</Text>\r\n                        </ListItem>)\r\n                    }\r\n                </List>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        departmentMembers: state.departmentMembers,\r\n        token: state.token,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(MenuBar)\r\n","C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\ChatRoom\\ChatBox\\ChatBox.js",["85","86","87"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport { Box, Button } from '@chakra-ui/react';\r\n\r\nimport PostInput from './PostInput';\r\nimport Post from './Post';\r\nimport Comments from './Comments';\r\n\r\nimport { storePreviousPosts, storePost } from '../../../context/dispatchers';\r\n\r\nimport './ChatBox.css';\r\n\r\nfunction ChatBox(props) {\r\n    let [limit, setLimit] = useState(10);\r\n    let [offset, setOffset] = useState(0);\r\n    const [postClicked, setPostClicked] = useState(null)\r\n    const [showComments, setShowComments] = useState(false);\r\n\r\n    // const handleShowComments = (postId) => {\r\n    //     setShowComments(true);\r\n    //     setPostClicked(postId);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        fetchPosts()\r\n    }, [])\r\n\r\n    async function fetchPosts () {\r\n        try {\r\n            const response = await axios.get(\r\n                `${process.env.REACT_APP_API_URL}/posts/read?limit=${limit}&offset=${offset}`,\r\n                {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + props.token\r\n                    },\r\n                }\r\n            );\r\n            if (response.status === 200) {\r\n                if (!response.data.data) {\r\n                    return console.log(response.data.message);\r\n                }   \r\n                const { posts: postArray } = response.data.data;\r\n                setOffset(offset + 10);\r\n\r\n                return storePreviousPosts(postArray.reverse(), props.dispatch);\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n            console.log(error.response)\r\n        }\r\n    }\r\n\r\n    const submitPost = async (post) => {\r\n        try {\r\n            const response = await axios.post(\r\n                `${process.env.REACT_APP_API_URL}/post`,\r\n                { ...post },\r\n                {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + props.token\r\n                    }\r\n                },\r\n            );\r\n            if (!response) {\r\n                return;\r\n            }\r\n\r\n            if (response.status === 201) {\r\n                const { post } = response.data.data;\r\n                return storePost(post, props.dispatch);\r\n            }\r\n        } catch (error) {\r\n            console.log(error.message, error.response)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box className=\"chat-box\">\r\n            <Button onClick={fetchPosts} w=\"200px\" py=\"5px\" px=\"10px\" ml=\"auto\" mr=\"auto\" >Load More</Button>\r\n            {props.posts.map((post, index) => {\r\n                const date = new Date(post.created_at);\r\n                const hours = date.getHours();\r\n                const minutes = date.getMinutes();\r\n                const dateString = date.toDateString();\r\n                const formattedDate = hours >= 12 ? `${dateString} (${hours}:${minutes} PM)` : `${dateString} (${hours}:${minutes} AM)`;\r\n                return (\r\n                    <Post \r\n                        key={post.post_id} \r\n                        post={post} \r\n                        date={formattedDate} \r\n                        // handleShowComments={handleShowComments}\r\n                        setShowComments={setShowComments}\r\n                        setPostClicked={setPostClicked} />\r\n                )\r\n            })}\r\n            {showComments && \r\n                <Comments \r\n                    postClicked={postClicked} \r\n                    showComments={showComments} \r\n                    setShowComments={setShowComments} \r\n                />\r\n            }\r\n            {/* {showComments && <Comments setShowComments={setShowComments} />} */}\r\n            <PostInput submitPost={submitPost} />\r\n        </Box>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.posts,\r\n        token: state.token,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ChatBox);\r\n","C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\ChatRoom\\CommentBox\\CommentBox.js",[],"C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\context\\reducer.js",[],"C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\context\\actionNames.js",[],"C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\context\\dispatchers.js",["88"],"import { \r\n    STORE_TOKEN,\r\n    STORE_USER_DATA,\r\n    STORE_DEPARTMENT_MEMBERS,\r\n    STORE_POST,\r\n    STORE_LATEST_POSTS,\r\n    STORE_PREVIOUS_POSTS\r\n} from './actionNames';\r\n\r\n// Used in the LogIn and SignUp component(s)\r\nexport const storeToken = (token, dispatch) => {\r\n    // First store token in local storage\r\n    localStorage.setItem('token', JSON.stringify(token));\r\n    // Store token in redux state\r\n    dispatch({ type: STORE_TOKEN, payload: token });\r\n}\r\n\r\n// Used in the LogIn and SignUp component(s)\r\nexport const storeUser = ({ firstname, lastname, email, department, isadmin, profilePic }, dispatch) => {\r\n    dispatch({ type: STORE_USER_DATA, payload: { firstname, lastname, email, department, isadmin, profilePic } });\r\n}\r\n\r\n// Used in the MenuBar component\r\nexport const storeDepartmentMembers = (members, dispatch) => {\r\n    dispatch({ type: STORE_DEPARTMENT_MEMBERS, payload: members })\r\n}\r\n\r\n// Used in the ChatBox.js component\r\nexport const storePost  = (post, dispatch) => {\r\n    dispatch({ type: STORE_POST, payload: post })\r\n}\r\n\r\n// Used in the ChatBox.js component\r\nexport const storePreviousPosts = (posts, dispatch) => {\r\n    dispatch({ type: STORE_PREVIOUS_POSTS, payload: posts });\r\n}","C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\ChatRoom\\ChatBox\\PostInput.js",[],"C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\ChatRoom\\ChatBox\\Post.js",[],"C:\\Users\\Jennifer\\Ekobitz_files\\Projects\\Teamwork\\client\\src\\components\\ChatRoom\\ChatBox\\Comments.js",["89"],"import React, { useEffect } from 'react'\r\n\r\nimport axios from 'axios';\r\n\r\nimport { Box, Text } from '@chakra-ui/react';\r\n\r\nfunction Comments(props) {\r\n    useEffect(() => {\r\n        // fetchComments()\r\n    })\r\n\r\n    async function fetchComments () {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/comments/read', \r\n            { postId: props.postClicked },\r\n            {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + props.token\r\n                }\r\n            });\r\n            console.log(response.data)\r\n        } catch (error) {\r\n            console.log(error.response)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box\r\n        position=\"fixed\"\r\n        right=\"5%\"\r\n        top=\"30%\"\r\n        w=\"50%\"\r\n        left=\"70%\"\r\n        transform=\"translateX(-70%)\"\r\n        maxH=\"450px\"\r\n        bg=\"#fff\"\r\n        overflow=\"auto\">\r\n            <Box as='button' onClick={() => props.setShowComments(false)}> X </Box>\r\n             <Box mt=\"10px\">\r\n                <Text \r\n                    as=\"h4\"\r\n                    d=\"inline-block\" \r\n                    fontWeight=\"500\" \r\n                    textAlign=\"left\">\r\n                    {/* {props.comment.firstname} {props.comment.lastname}  */}\r\n                </Text>\r\n                {/* <Text as=\"span\" ml=\"10px\" color=\"gray.500\">{props.date}</Text> */}\r\n                <Box className=\"modify-post-container\">\r\n                    <Text as=\"button\" className=\"edit-btn\">Edit</Text>\r\n                    <Text as=\"button\" className=\"delete-btn\">Delete</Text>\r\n                </Box>\r\n            </Box>\r\n            <Box>\r\n                {/* <Text>{props.comment.article}</Text>\r\n                {props.comment.gif_link && <img src={props.comment.gif_link} alt=\"gif\" w=\"100%\" h=\"auto\" />} */}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Comments;\r\n",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":19},{"ruleId":"94","severity":1,"message":"98","line":3,"column":21,"nodeType":"96","messageId":"97","endLine":3,"endColumn":24},{"ruleId":"90","replacedBy":"99"},{"ruleId":"92","replacedBy":"100"},{"ruleId":"94","severity":1,"message":"101","line":1,"column":28,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"102","severity":1,"message":"103","line":19,"column":8,"nodeType":"104","endLine":19,"endColumn":10,"suggestions":"105"},{"ruleId":"94","severity":1,"message":"106","line":1,"column":38,"nodeType":"96","messageId":"97","endLine":1,"endColumn":44},{"ruleId":"94","severity":1,"message":"107","line":16,"column":17,"nodeType":"96","messageId":"97","endLine":16,"endColumn":25},{"ruleId":"102","severity":1,"message":"108","line":28,"column":8,"nodeType":"104","endLine":28,"endColumn":10,"suggestions":"109"},{"ruleId":"94","severity":1,"message":"110","line":6,"column":5,"nodeType":"96","messageId":"97","endLine":6,"endColumn":23},{"ruleId":"94","severity":1,"message":"111","line":12,"column":20,"nodeType":"96","messageId":"97","endLine":12,"endColumn":33},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.",["112"],["113"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchDepartmentMembers'. Either include it or remove the dependency array.","ArrayExpression",["114"],"'useRef' is defined but never used.","'setLimit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.",["115"],"'STORE_LATEST_POSTS' is defined but never used.","'fetchComments' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [fetchDepartmentMembers]",{"range":"120","text":"121"},"Update the dependencies array to be: [fetchPosts]",{"range":"122","text":"123"},[403,405],"[fetchDepartmentMembers]",[813,815],"[fetchPosts]"]